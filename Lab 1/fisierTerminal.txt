PS C:\Users\Admin\Desktop\Proiecte\Facultate\PF> ghci
GHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help
ghci> mod 1 3
1
ghci> :load test.hs

<no location info>: error: Can't find test.hs
Failed, no modules loaded.
ghci> :quit
Leaving GHCi.
PS C:\Users\Admin\Desktop\Proiecte\Facultate\PF> cd Lab 1
Set-Location : A positional parameter cannot be found that accepts argument '1'.
At line:1 char:1
+ cd Lab 1
+ ~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Set-Location], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.SetLocationCommand

PS C:\Users\Admin\Desktop\Proiecte\Facultate\PF> cd "Lab 1"
PS C:\Users\Admin\Desktop\Proiecte\Facultate\PF\Lab 1> ghci      
GHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help
ghci> :load test.hs
[1 of 2] Compiling Main             ( test.hs, interpreted )
Ok, one module loaded.
ghci> f 10 
11
ghci> :r
[1 of 2] Compiling Main             ( test.hs, interpreted ) [Source file changed]
Ok, one module loaded.
ghci> f 10 
11
ghci> :t f
f :: Int -> Int
ghci> :r   
[1 of 2] Compiling Main             ( test.hs, interpreted ) [Source file changed]
Ok, one module loaded.
ghci> sumtree 3 4 5
14
ghci> sumtree 3 4 5
14
ghci> :r
[1 of 2] Compiling Main             ( test.hs, interpreted ) [Source file changed]
Ok, one module loaded.
ghci> sumtree 3 4 5
12
ghci> :r
[1 of 2] Compiling Main             ( test.hs, interpreted ) [Source file changed]
Ok, one module loaded.
ghci> sum1 3
6
ghci> sum1 10
55
ghci>
 *  History restored 

PS C:\Users\Admin\Desktop\Proiecte\Facultate\PF> 
 *  History restored 

PS C:\Users\Admin\Desktop\Proiecte\Facultate\PF> cd "Lab 1"
PS C:\Users\Admin\Desktop\Proiecte\Facultate\PF\Lab 1> ghci
GHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help
ghci> succ 9
10
ghci> :r
Ok, no modules loaded.
ghci> :load test.hs
[1 of 2] Compiling Main             ( test.hs, interpreted )  
Ok, one module loaded.
ghci> doubleSmallNumber 10
21
ghci> :t True
True :: Bool
ghci> :t False
False :: Bool
ghci> :t True && False
True && False :: Bool
ghci> :t True && (2 <=4 )
True && (2 <=4 ) :: Bool
ghci> :t True && (2 <= 4) 
True && (2 <= 4) :: Bool
ghci> :t "aaa"
"aaa" :: String
ghci> :t 2
2 :: Num a => a
ghci> :t 2 + 3
2 + 3 :: Num a => a
ghci> :t (2 + 3)
(2 + 3) :: Num a => a
ghci> :t (+)
(+) :: Num a => a -> a -> a
ghci> not 2

<interactive>:15:5: error:
    * No instance for (Num Bool) arising from the literal `2' 
    * In the first argument of `not', namely `2'
      In the expression: not 2
      In an equation for `it': it = not 2
ghci> :t not
not :: Bool -> Bool
ghci> :t 2
2 :: Num a => a
ghci> :t succ
succ :: Enum a => a -> a
ghci> :t max
max :: Ord a => a -> a -> a
ghci> :t pred
pred :: Enum a => a -> a
ghci> :t min
min :: Ord a => a -> a -> a
ghci> :load test
[1 of 2] Compiling Main             ( test.hs, interpreted )
Ok, one module loaded.
ghci> sumThree 2 3 4 
9
ghci> :r
[1 of 2] Compiling Main             ( test.hs, interpreted ) [Source file changed]
Ok, one module loaded.
ghci> id 5

<interactive>:25:1: error:
    Ambiguous occurrence `id'
    It could refer to
       either `Prelude.id',
              imported from `Prelude' at test.hs:1:1
              (and originally defined in `GHC.Base')
           or `Main.id', defined at test.hs:7:1
ghci> :load test    
[1 of 2] Compiling Main             ( test.hs, interpreted )  
Ok, one module loaded.
ghci> id 5      

<interactive>:27:1: error:
    Ambiguous occurrence `id'
    It could refer to
       either `Prelude.id',
              imported from `Prelude' at test.hs:1:1
              (and originally defined in `GHC.Base')
           or `Main.id', defined at test.hs:7:1
ghci> :load test.hs
[1 of 2] Compiling Main             ( test.hs, interpreted )  
Ok, one module loaded.
ghci> id 5

<interactive>:29:1: error:
    Ambiguous occurrence `id'
    It could refer to
       either `Prelude.id',
              imported from `Prelude' at test.hs:1:1
              (and originally defined in `GHC.Base')
           or `Main.id', defined at test.hs:8:1
ghci> :load test.hs
[1 of 2] Compiling Main             ( test.hs, interpreted )  
Ok, one module loaded.
ghci> idp 5
5
ghci> :t sumThree
sumThree :: Int -> Int -> Int -> Int
ghci> :load test.hs
[1 of 2] Compiling Main             ( test.hs, interpreted )  
Ok, one module loaded.
6
ghci> myMaxOfThree 3 4 5

<interactive>:35:1: error:
    Variable not in scope: myMaxOfThree :: t0 -> t1 -> t2 -> tghci> :load test.hs
[1 of 2] Compiling Main             ( test.hs, interpreted )
Ok, one module loaded.
ghci> myMaxOfThree 3 4 5
5
ghci> :load test.hs
[1 of 2] Compiling Main             ( test.hs, interpreted )
Ok, one module loaded.
ghci> mySum 12
78
ghci> :load test.hs
[1 of 2] Compiling Main             ( test.hs, interpreted )
Ok, one module loaded.
ghci> fib 9
34
ghci> :load test.hs
[1 of 2] Compiling Main             ( test.hs, interpreted )
Ok, one module loaded.
ghci> greatCommonDivisor 32 12
4
ghci> :load test.hs
[1 of 2] Compiling Main             ( test.hs, interpreted )
Ok, one module loaded.
ghci> hasDivisors 10 6 8

<interactive>:45:1: error:
    Variable not in scope: hasDivisors :: t0 -> t1 -> t2 -> t
ghci> :load fisa2.hs    
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )

fisa2.hs:27:1: error:
    The type signature for `isPrime' lacks an accompanying binding
   |
27 | isPrime :: Integer -> Bool
   | ^^^^^^^
Failed, no modules loaded.
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> hasDivisors 10 6 8
False
ghci> hasDivisors 10 6 9
False
ghci> hasDivisors 10 6 10
True
ghci> hasDivisors 10 6 11
True
ghci> :load fisa2.hs     
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )

fisa2.hs:35:21: error: Variable not in scope: a :: Integer
   |
35 |     | hasDivisors n a b = True
   |                     ^

fisa2.hs:35:23: error: Variable not in scope: b :: Integer
   |
35 |     | hasDivisors n a b = True
   |                       ^
Failed, no modules loaded.
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )

fisa2.hs:37:1: error:
    parse error (possibly incorrect indentation or mismatched brackets)
Failed, no modules loaded.
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )

fisa2.hs:35:21: error: Variable not in scope: a :: Integer
   |
35 |     | hasDivisors n a b = True
   |                     ^

fisa2.hs:35:23: error: Variable not in scope: b :: Integer
   |
35 |     | hasDivisors n a b = True
   |                       ^
Failed, no modules loaded.
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> isPrime 45         
False