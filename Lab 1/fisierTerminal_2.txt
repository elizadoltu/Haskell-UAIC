 "Lab 1"
PS C:\Users\Admin\Desktop\Proiecte\Facultate\PF\Haskell-UAIC\Lab 1> ghci
GHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help
ghci> fibo 23

<interactive>:1:1: error: Variable not in scope: fibo :: t0 -> t
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> fibo 23
28657
ghci> fibo' 23
23
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )   
Ok, one module loaded.
ghci> fibo' 23
28657
ghci> and True True

<interactive>:7:1: error:
    Ambiguous occurrence `and'
    It could refer to
       either `Prelude.and',
              imported from `Prelude' at fisa2.hs:1:1
              (and originally defined in `Data.Foldable')       
           or `Main.and', defined at fisa2.hs:2:1
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )

fisa2.hs:33:1: error:
    The type signature for `succ' lacks an accompanying binding 
    Suggested fix:
      Move the type signature to the declaration site of `succ'.
   |
33 | succ :: Integer -> Integer
   | ^^^^
Failed, no modules loaded.
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )   
Ok, one module loaded.
ghci>
ghci> and_1 True True
True
ghci> :load fisa2.hs 
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )   

fisa2.hs:37:1: error:
    * Couldn't match expected type `Integer'
                  with actual type `t0 -> Integer'
    * The equation for `adunareSuccesiva' has two value arguments,
        but its type `Integer -> Integer' has only one
   |
37 | adunareSuccesiva a b 
   | ^^^^^^^^^^^^^^^^^^^^^^...

fisa2.hs:39:19: error:
    * Couldn't match expected type `t0 -> Integer'
                  with actual type `Integer'
    * The function `adunareSuccesiva'
      is applied to two value arguments,
        but its type `Integer -> Integer' has only one
      In the expression: adunareSuccesiva (succesor a) (b - 1)
      In an equation for `adunareSuccesiva':
          adunareSuccesiva a b
            | b == 0 = a
            | otherwise = adunareSuccesiva (succesor a) (b - 1) 
    * Relevant bindings include b :: t0 (bound at fisa2.hs:37:20)
   |
39 |     | otherwise = adunareSuccesiva (succesor a) (b - 1)    
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    
Failed, no modules loaded.
ghci> :load fisa2.hs 
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )   
Ok, one module loaded.
    * Couldn't match expected type `t0 -> t' with actual type `Integer'
    * The function `adunareSuccesiva'
      is applied to two value arguments,
        but its type `(Integer, Integer) -> Integer' has only one
      In the expression: adunareSuccesiva 23 34
      In an equation for `it': it = adunareSuccesiva 23 34
    * Relevant bindings include it :: t (bound at <interactive>:14:1)
ghci> :load fisa2.hs        
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> adunareSuccesiva 23 34

<interactive>:16:1: error:
    * Couldn't match expected type `t0 -> t' with actual type `Integer'
    * The function `adunareSuccesiva'
      is applied to two value arguments,
      In the expression: adunareSuccesiva 23 34
      In an equation for `it': it = adunareSuccesiva 23 34
    * Relevant bindings include it :: t (bound at <interactive>:16:1)
ghci> adunareSuccesiva (23, 34)
57
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire (2, 3)

 *  History restored 

PS C:\Users\Admin\Desktop\Proiecte\Facultate\PF\Haskell-UAIC> ghci
GHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help
ghci> :load test.hs

<no location info>: error: Can't find test.hs
Failed, no modules loaded.
ghci> load fisa2.hs

<interactive>:2:1: error:
    Variable not in scope: load :: t0 -> b0 -> c

<interactive>:2:6: error: Variable not in scope: fisa2

<interactive>:2:12: error: Variable not in scope: hs :: a -> b0
ghci> :load fisa2.hs

<no location info>: error: Can't find fisa2.hs
Failed, no modules loaded.
ghci> :quit
Leaving GHCi.
PS C:\Users\Admin\Desktop\Proiecte\Facultate\PF\Haskell-UAIC> cd "Lab 1"
PS C:\Users\Admin\Desktop\Proiecte\Facultate\PF\Haskell-UAIC\Lab 1> ghci
GHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire (2, 3)
8
ghci> :load fisa2.hs  
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire (2, 3)
5
ghci> :load fisa2.hs  
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire (2, 3)
16
ghci> inmultire (3, 2)
12
ghci> :load fisa2.hs  
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire (3, 2)
6
ghci> :load fisa2.hs  
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> ridicarePutere 2 3
256
ghci> :load fisa2.hs    
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> ridicarePutere 2 3
16
ghci> ridicarePutere 2 3
16
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> ridicarePutere 2 3
8
ghci> :load fisa2.hs    
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 2     
9
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 2 
21
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 2 
0
ghci> inmultire 3 2
0
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 2 
12
ghci> inmultire 3 0
3
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 2 
9
ghci> inmultire 3 3
21
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 3 
0
ghci> inmultire 3 3
0
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 3 
24
ghci> inmultire 3 2 
12
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 2 
12
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 2 
7
ghci> inmultire 3 2
7
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 2 
8
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 2 
17
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> inmultire 3 2 
6
ghci> inmultire 3 3 
9
ghci> inmultire 3 0
3
ghci> :load fisa2.hs
[1 of 2] Compiling Main             ( fisa2.hs, interpreted )
Ok, one module loaded.
ghci> ridicarePutere 2 3
12
ghci> inmultire 4 5     
19
ghci>